-frontend - vanilla Javascript -Front end module
	-user interface
-backend ? -database module? -ruby 

			-PONG
				- real time multiplayer


injections sql doc : https://www.w3schools.com/sql/sql_injection.


MEETING -> Monday 6 january 13h

-pick 3 favorite
-pick 4 ok tier

WEB :
1. : Major module: Use a Framework to build the backend.

In this major module, you are required to utilize a specific web framework for your
backend development, and that framework is Django .

You can create the backend without using the constraints of this
module by using the default language/framework (see above in the
mandatory part). However, this module will only be valid if you
follow its requirements.

1.5 : Minor module:
Use a framework or a toolkit to build the front-end.

Your frontend development must use the Bootstrap toolkit in addition of the
vanilla Javascript, and nothing else.

You can create a front-end without using the constraints of this
module by using the default front-end directives (see above in the
mandatory part). However, this module will only be valid if you
follow its requirements.

2. : Minor module:
Use a database for the backend -and more.

The designated database for all DB instances in your project is PostgreSQL .
This choice guarantees data consistency and compatibility across all project compo-
nents and may be a prerequisite for other modules, such as the backend Frame-
work module.

DEVOPS :
3. : Major module: Infrastructure Setup with ELK (Elasticsearch, Logstash, Kibana)
for Log Management.

In this major module, the objective is to establish a robust infrastructure for log
management and analysis using the ELK stack (Elasticsearch, Logstash, Kibana).
Key features and goals include:
	◦ Deploy Elasticsearch to efficiently store and index log data, making it easily
	searchable and accessible.
	◦ Configure Logstash to collect, process, and transform log data from various
	sources and send it to Elasticsearch.
	◦ Set up Kibana for visualizing log data, creating dashboards, and generating
	insights from log events.
	◦ Define data retention and archiving policies to manage the storage of log data
	effectively.
	◦ Implement security measures to protect log data and access to the ELK stack
	components.

	This major module aims to establish a powerful log management and analysis sys-
tem using the ELK stack, enabling effective troubleshooting, monitoring, and in-
sights into the system’s operation and performance.

3.5 : Minor module: Monitoring system.
In this minor module, the objective is to set up a comprehensive monitoring system
using Prometheus and Grafana . Key features and goals include:
	◦ Deploy Prometheus as the monitoring and alerting toolkit to collect metrics
	and monitor the health and performance of various system components.
	◦ Configure data exporters and integrations to capture metrics from different
	services, databases, and infrastructure components.
	◦ Create custom dashboards and visualizations using Grafana to provide real-
	time insights into system metrics and performance.
	◦ Set up alerting rules in Prometheus to proactively detect and respond to
	critical issues and anomalies.
	◦ Ensure proper data retention and storage strategies for historical metrics data.
	◦ Implement secure authentication and access control mechanisms for Grafana
	to protect sensitive monitoring data.

	This minor module aims to establish a robust monitoring infrastructure using
Prometheus and Grafana , enabling real-time visibility into system metrics and
proactive issue detection for improved system performance and reliability.

4.5 : Major module: Designing the Backend as Microservices.

In this major module, the goal is to architect the backend of the system using a
microservices approach. Key features and objectives include:
	◦ Divide the backend into smaller, loosely-coupled microservices, each responsi-
	ble for specific functions or features.
	◦ Define clear boundaries and interfaces between microservices to enable inde-
	pendent development, deployment, and scaling.
	◦ Implement communication mechanisms between microservices, such as REST-
	ful APIs or message queues, to facilitate data exchange and coordination.
	◦ Ensure that each microservice is responsible for a single, well-defined task or
	business capability, promoting maintainability and scalability.
	
	This major module aims to enhance the system’s architecture by adopting a mi-
croservices design approach, enabling greater flexibility, scalability, and maintain-
ability of the backend components.


Gameplay and user experience :

5.5 : Major module: Add Another Game with User History and Matchmaking.

In this major module, the objective is to introduce a new game, distinct from Pong,
and incorporate features such as user history tracking and matchmaking. Key
features and goals include:

	◦ Develop a new, engaging game to diversify the platform’s offerings and enter-
	tain users.
	◦ Implement user history tracking to record and display individual user’s game-
	play statistics.
	◦ Create a matchmaking system to allow users to find opponents and participate
	in fair and balanced matches.
	◦ Ensure that user game history and matchmaking data are stored securely and
	remain up-to-date.
	◦ Optimize the performance and responsiveness of the new game to provide an
	enjoyable user experience. Regularly update and maintain the game to fix
	bugs, add new features, and enhance gameplay.
	This major module aims to expand your platform by introducing a new game,
	enhancing user engagement with gameplay history, and facilitating matchmaking
	for an enjoyable gaming experience.
	
Accessibility : 

6. : Minor module : Support on all devices.

In this module, the main focus is to ensure that your website works seamlessly on
all types of devices. Key features and objectives include:
	◦ Make sure the website is responsive, adapting to different screen sizes and ori-
	entations, ensuring a consistent user experience on desktops, laptops, tablets,
	and smartphones.
	◦ Ensure that users can easily navigate and interact with the website using
	different input methods, such as touchscreens, keyboards, and mice, depending
	on the device they are using.

	This module aims to provide a consistent and user-friendly experience on all devices,
maximizing accessibility and user satisfaction.


6.5 : Minor module : Expanding Browser Compatibility.

In this minor module, the objective is to enhance the compatibility of the web
application by adding support for an additional web browser. Key features and
objectives include:
	◦ Extend browser support to include an additional web browser, ensuring that
	users can access and use the application seamlessly.
	◦ Conduct thorough testing and optimization to ensure that the web application
	functions correctly and displays correctly in the newly supported browser.
	◦ Address any compatibility issues or rendering discrepancies that may arise in
	the added web browser.
	◦ Ensure a consistent user experience across all supported browsers, maintaining
	usability and functionality.

	This minor module aims to broaden the accessibility of the web application by
supporting an additional web browser, providing users with more choices for their
browsing experience.

7. : Minor module: Multiple language supports.

In this minor module, the objective is to ensure that your website supports multiple
languages to cater to a diverse user base. Key features and goals include:
	◦ Implement support for a minimum of three languages on the website to ac-
	commodate a broad audience.
	◦ Provide a language switcher or selector that allows users to easily change the
	website’s language based on their preferences.
	◦ Translate essential website content, such as navigation menus, headings, and
	key information, into the supported languages.
	◦ Ensure that users can navigate and interact with the website seamlessly, re-
	gardless of the selected language.
	◦ Consider using language packs or localization libraries to simplify the transla-
	tion process and maintain consistency across different languages.
	◦ Allow users to set their preferred language as a default choice for subsequent
	visits to the website.

	This minor module aims to enhance the accessibility and inclusivity of your website
by offering content in multiple languages, making it more user-friendly for a diverse
international audience.


faire un jeu solo